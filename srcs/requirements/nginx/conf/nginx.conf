# http://nginx.org/en/docs/beginners_guide.html

# upstream wordpress_vol {
#                 server wordpress:9000;
#         }

server {
    # https://www.plesk.com/blog/various/nginx-configuration-guide/#:~:text=Every%20NGINX%20configuration%20file%20will,interchangeably%20as%20blocks%20or%20contexts%20.
    # As the server_name directive informs NGINX how it should process requests for the domain,
    # location directives apply to requests for certain folders and files (e.g. http://example.com/blog/.).
    server_name         opacaud.42.fr;

    listen              443 ssl;
    listen              [::]:443 ssl;
    
    # https://www.cloudflare.com/fr-fr/learning/ssl/what-is-an-ssl-certificate/
    ssl                 on;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_certificate     /etc/nginx/ssl/opacaud.42.fr.crt;
    ssl_certificate_key /etc/nginx/ssl/opacaud.42.fr.key;

    # http://nginx.org/en/docs/beginners_guide.html    
    # root:
    # For matching requests, the URI will be added to the path specified in the root directive
    # to form the path to the requested file on the local file system.
    # index:
    # https://www.plesk.com/blog/various/nginx-configuration-guide/#:~:text=Every%20NGINX%20configuration%20file%20will,interchangeably%20as%20blocks%20or%20contexts%20.
    # The index variable informs NGINX which file it should serve when or if none are specified.
    # try_files:
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files
    # Checks the existence of files in the specified order and uses the first found file for request processing;
    # the processing is performed in the current context. The path to a file is constructed from the file parameter
    # according to the root and alias directives. It is possible to check directory’s existence by specifying
    # a slash at the end of a name, e.g. “$uri/”. If none of the files were found, an internal redirect
    # to the uri specified in the last parameter is made.
    # https://makina-corpus.com/drupal/bien-debuter-avec-nginx
    # D'abord on va tester $uri en regardant si l'uri du fichier demandé correspond à un chemin vers un vrai fichier
    # dans le doc root du site, puis $uri/ pour voir si en fait ce ne serait pas un directory
    # https://fr.wikipedia.org/wiki/Uniform_Resource_Identifier
    # Un URI peut être de type « locator » (URL) ou « name » (URN) ou les deux.
    root                /var/www/wordpress;
    index               index.php index.html index.htm;
    try_files           $uri $uri/ =404;

    # http://nginx.org/en/docs/beginners_guide.html
    # location:
    # Once nginx decides which server processes a request, it tests the URI specified in the request’s header
    # against the parameters of the location directives defined inside the server block.
    location / {
        autoindex   on;
    }

    # https://www.rosehosting.com/blog/how-to-install-wordpress-with-nginx-on-debian-10/#Step-4-Install-WordPress
    # so that PHP requests are sent to the php-fpm service
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass            wordpress:9000;
        fastcgi_index           index.php;
        include                 fastcgi_params;
        fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param           SCRIPT_NAME     $fastcgi_script_name;

        fastcgi_connect_timeout 300;
        fastcgi_read_timeout    300;
        fastcgi_send_timeout    300;

        # include         /etc/nginx/fastcgi_params;

        # include         fastcgi.conf;
        # fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # fastcgi_pass    wordpress:9000;
        # root            /var/www/wordpress;
        # fastcgi_index   index.php;
        # fastcgi_param   SCRIPT_NAME $fastcgi_script_name;

        # include /etc/nginx/conf.d/*.conf;
        # include /etc/nginx/sites-enabled/*;
        # fastcgi_intercept_errors        on;
        # error_page 404 /error/404.php;

        # fastcgi_read_timeout            3600s;
        # fastcgi_buffer_size             128k;
        # fastcgi_buffers                 4 128k;

        # fastcgi_pass                    unix:/run/php/php7.3-fpm.sock;
        # fastcgi_pass                    wordpress_vol;

    }
}